# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

options = Options()
options.add_argument('--headless')
options.add_argument('--disable-gpu')

class Test5Post():
  def setup_method(self, method):
    self.driver = webdriver.Chrome(ChromeDriverManager().install(), chrome_options=options)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_postwithallinputfieldsfilledin(self):
    self.driver.get("http://localhost:1667/")
    self.driver.set_window_size(890, 786)
    self.driver.find_element(By.LINK_TEXT, "Sign in").click()
    self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(1) > .form-control").click()
    self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(1) > .form-control").send_keys("Dtesterbuggie@gmail.com")
    self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(2) > .form-control").click()
    self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(2) > .form-control").send_keys("123ABCabc#&@{}í")
    self.driver.find_element(By.XPATH, "//button[contains(.,\'Sign in\')]").click()
    WebDriverWait(self.driver, 30000).until(expected_conditions.presence_of_element_located((By.XPATH, "//a[contains(.,\' New Article\')]")))
    self.driver.find_element(By.XPATH, "//a[contains(.,\' New Article\')]").click()
    elements = self.driver.find_elements(By.XPATH, "//input[@type=\'text\']")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "(//input[@type=\'text\'])[2]")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "//div[@id=\'app\']/div/div/div/div/form/fieldset/fieldset[3]/textarea")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "(//input[@type=\'text\'])[3]")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "//button[contains(.,\'Publish Article\')]")
    assert len(elements) > 0
    self.driver.find_element(By.XPATH, "//input[@type=\'text\']").click()
    self.driver.find_element(By.XPATH, "//input[@type=\'text\']").send_keys("test 001")
    self.driver.find_element(By.XPATH, "(//input[@type=\'text\'])[2]").click()
    self.driver.find_element(By.XPATH, "(//input[@type=\'text\'])[2]").send_keys("QA as")
    self.driver.find_element(By.XPATH, "//div[@id=\'app\']/div/div/div/div/form/fieldset/fieldset[3]/textarea").click()
    self.driver.find_element(By.XPATH, "//div[@id=\'app\']/div/div/div/div/form/fieldset/fieldset[3]/textarea").send_keys("#Software QA management\\nAz alábbi linken a **szoftver minőségbiztosítás**ról olvashatsz.\\n[Link](https://en.wikipedia.org/wiki/Software_quality_assurance)")
    self.driver.find_element(By.XPATH, "(//input[@type=\'text\'])[3]").click()
    self.driver.find_element(By.XPATH, "(//input[@type=\'text\'])[3]").send_keys("quality")
    value = self.driver.find_element(By.XPATH, "//input[@type=\'text\']").get_attribute("value")
    assert value == "test 001"
    value = self.driver.find_element(By.XPATH, "(//input[@type=\'text\'])[2]").get_attribute("value")
    assert value == "QA as"
    value = self.driver.find_element(By.XPATH, "//div[@id=\'app\']/div/div/div/div/form/fieldset/fieldset[3]/textarea").get_attribute("value")
    assert value == "#Software QA management\\nAz alábbi linken a **szoftver minőségbiztosítás**ról olvashatsz.\\n[Link](https://en.wikipedia.org/wiki/Software_quality_assurance)"
    value = self.driver.find_element(By.XPATH, "(//input[@type=\'text\'])[3]").get_attribute("value")
    assert value == "quality"
    self.driver.find_element(By.XPATH, "//button[contains(.,\'Publish Article\')]").click()
    elements = self.driver.find_elements(By.XPATH, "//h1[contains(.,\'test 001\')]")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "(//a[contains(text(),\'TesterD\')])[2]")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "//a[contains(.,\'  Edit Article\')]")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "//button[contains(.,\'  Delete Article\')]")
    assert len(elements) > 0
    self.driver.find_element(By.XPATH, "//a[contains(.,\'Home\')]").click()
    self.driver.find_element(By.XPATH, "//a[contains(.,\'Your Feed\')]").click()
    elements = self.driver.find_elements(By.XPATH, "//h1[contains(.,\'test 001\')]")
    assert len(elements) > 0
    self.driver.find_element(By.XPATH, "//a[contains(.,\'Global Feed\')]").click()
    elements = self.driver.find_elements(By.XPATH, "//h1[contains(.,\'test 001\')]")
    assert len(elements) > 0
    self.driver.find_element(By.XPATH, "//a[contains(.,\'TesterD\')]").click()
    self.driver.find_element(By.XPATH, "//a[contains(.,\'My Articles\')]").click()
    elements = self.driver.find_elements(By.XPATH, "//h1[contains(.,\'test 001\')]")
    assert len(elements) > 0
    self.driver.find_element(By.XPATH, "//a[contains(.,\' Log out\')]").click()
  
  def test_postwithemptyfields(self):
    self.driver.get("http://localhost:1667/")
    self.driver.set_window_size(890, 786)
    self.driver.find_element(By.LINK_TEXT, "Sign in").click()
    self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(1) > .form-control").click()
    self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(1) > .form-control").send_keys("Dtesterbuggie@gmail.com")
    self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(2) > .form-control").click()
    self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(2) > .form-control").send_keys("123ABCabc#&@{}í")
    self.driver.find_element(By.XPATH, "//button[contains(.,\'Sign in\')]").click()
    WebDriverWait(self.driver, 30000).until(expected_conditions.presence_of_element_located((By.XPATH, "//a[contains(.,\' New Article\')]")))
    self.driver.find_element(By.XPATH, "//a[contains(.,\' New Article\')]").click()
    elements = self.driver.find_elements(By.XPATH, "//input[@type=\'text\']")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "(//input[@type=\'text\'])[2]")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "//div[@id=\'app\']/div/div/div/div/form/fieldset/fieldset[3]/textarea")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "(//input[@type=\'text\'])[3]")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "//button[contains(.,\'Publish Article\')]")
    assert len(elements) > 0
    self.driver.find_element(By.XPATH, "//input[@type=\'text\']").click()
    self.driver.find_element(By.XPATH, "(//input[@type=\'text\'])[2]").click()
    self.driver.find_element(By.XPATH, "//div[@id=\'app\']/div/div/div/div/form/fieldset/fieldset[3]/textarea").click()
    self.driver.find_element(By.XPATH, "(//input[@type=\'text\'])[3]").click()
    self.driver.find_element(By.XPATH, "//button[contains(.,\'Publish Article\')]").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".swal-title").text == "Oops!"
    self.driver.find_element(By.XPATH, "//button[contains(.,\'OK\')]").click()
    self.driver.find_element(By.XPATH, "//a[contains(.,\' Log out\')]").click()
  
