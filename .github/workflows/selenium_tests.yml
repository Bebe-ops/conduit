name: Selenium webdriver tests
on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: install Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      - name: Install Chrome
        run: |
          sudo apt install google-chrome-stable
      
      - name: Start Conduit
        run: docker-compose up -d
        
      - name: Sleep for 45 seconds
        run: sleep 45s
        shell: bash

      - name: Install Selenium Side Runner
        run: |
          npm install -g selenium-side-runner       
          
      - name: Install seleniumbase
        run: pip install seleniumbase

      - name: Install chromedriver
        run: |
          seleniumbase install chromedriver
          
      - name: Run registration test
        run: |
          selenium-side-runner -c "browserName=chrome goog:chromeOptions.args=[disable-infobars, headless]" seleniumide-tests/registration.side
      
      - name: Run login test
        run: |
          selenium-side-runner -c "browserName=chrome goog:chromeOptions.args=[disable-infobars, headless]" seleniumide-tests/login.side
      
      - name: Run post test
        run: |
          selenium-side-runner -c "browserName=chrome goog:chromeOptions.args=[disable-infobars, headless]" seleniumide-tests/post.side
          
      - name: Test with pytest
        run: |
          pytest --alluredir=allure-results
      
      - name: Collect docker logs
        uses: jwalton/gh-docker-logs@v1
        with:
          dest: './logs'
          
      - name: Archive execution artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docker-logs
          path: ./logs


      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 20

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
